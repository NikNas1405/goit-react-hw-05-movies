{"version":3,"file":"static/js/387.c3a1d983.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","utils/get-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  margin-top: 20px;\n  gap: 16px;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  overflow: hidden;\n\n  flex-basis: calc((100% - 16px * 4) / 5);\n\n  @media (max-width: 400px) {\n    flex-basis: calc((100% - 16px * 2) / 3);\n  }\n\n  @media (min-width: 768px) {\n    flex-basis: calc((100% - 16px * 6) / 7);\n  }\n\n  @media (min-width: 1024px) {\n    flex-basis: calc((100% - 16px * 8) / 9);\n  }\n`;\n\nexport const ImageHolder = styled.div`\n  height: 160px;\n  overflow: hidden;\n`;\n\nexport const Name = styled.p`\n  color: white;\n  text-shadow: 0px 0px 13px #fa1427;\n  display: block;\n  height: 35px;\n  line-height: 1.2;\n`;\n\nexport const Text = styled.p`\n  color: #9a9b9b;\n  display: block;\n  > span {\n    display: block;\n    color: white;\n    float: none;\n    line-height: 1.2;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilmCastByID } from '../../utils/get-api';\nimport { CastList, CastListItem, ImageHolder, Name, Text } from './Cast.styled';\nimport Loader from '../../components/Loader/Loader';\nimport { Error } from '../../components/GlobalStyle';\n\nexport const Cast = () => {\n  const { id } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [noResults, setNoResults] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function getFilmCast(id) {\n      setLoading(true);\n      try {\n        const castInfo = await getFilmCastByID(id);\n        if (castInfo.cast.length === 0) {\n          setNoResults(true);\n        }\n        setCasts(castInfo.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getFilmCast(id);\n  }, [id]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {noResults ? (\n        <Error>We don't have any information about casts.</Error>\n      ) : (\n        <CastList>\n          {casts.map(({ id, name, profile_path, character }) => (\n            <CastListItem key={id}>\n              <ImageHolder>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : 'https://abrakadabra.fun/uploads/posts/2021-12/1640528672_14-abrakadabra-fun-p-serii-chelovek-na-avu-16.png'\n                  }\n                  alt={name}\n                />\n              </ImageHolder>\n\n              <Name>{name}</Name>\n              <Text>\n                Character:\n                <span> {character}</span>\n              </Text>\n            </CastListItem>\n          ))}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '69dd57d815b4b29a8f016ba838d3c4d6';\n\nconst defaultParams = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport async function getTrendingFilms(page) {\n  const options = new URLSearchParams({\n    ...defaultParams,\n    page: page,\n  });\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/day?${options}`\n    );\n    // console.log(response.data.results);\n    // console.log(response.data.total_pages);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport async function getFilmByID(filmsID) {\n  const options = new URLSearchParams({\n    ...defaultParams,\n  });\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${filmsID}?${options}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport async function getFilmCastByID(filmsID) {\n  const options = new URLSearchParams({\n    ...defaultParams,\n  });\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${filmsID}/credits?${options}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// запит оглядів для сторінки кінофільму.\nexport async function getFilmReviewsByID(filmsID) {\n  const options = new URLSearchParams({\n    ...defaultParams,\n  });\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${filmsID}/reviews?${options}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n//пошук фільму за ключовим словом на сторінці фільмів\nexport async function getFilmsByQuery(query, page) {\n  const options = new URLSearchParams({\n    ...defaultParams,\n    query: query,\n    page: page,\n  });\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?${options}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastListItem","_templateObject2","ImageHolder","_templateObject3","Name","_templateObject4","Text","_templateObject5","Cast","id","useParams","_useState","useState","_useState2","_slicedToArray","casts","setCasts","_useState3","_useState4","noResults","setNoResults","_useState5","_useState6","loading","setLoading","useEffect","_getFilmCast","_asyncToGenerator","_regeneratorRuntime","mark","_callee","castInfo","wrap","_context","prev","next","getFilmCastByID","sent","cast","length","t0","console","log","finish","stop","apply","arguments","_x","getFilmCast","_jsxs","_Fragment","children","_jsx","Loader","Error","map","_ref","name","profile_path","character","src","concat","alt","BASE_URL","defaultParams","api_key","language","getTrendingFilms","_getTrendingFilms","page","options","response","URLSearchParams","_objectSpread","axios","abrupt","data","getFilmByID","_x2","_getFilmByID","_callee2","filmsID","_context2","_x3","_getFilmCastByID","_callee3","_context3","getFilmReviewsByID","_x4","_getFilmReviewsByID","_callee4","_context4","getFilmsByQuery","_x5","_x6","_getFilmsByQuery","_callee5","query","_context5"],"sourceRoot":""}